zl <- c(-3,3)
zz <- seq( -3,3, length=length(cls))
image( zz, rep(1,length(zz)), zz, col=cls )
plot(zz)
plot( zz, rep(1,length(zz), pch=19, col=cls)
)
plot( zz, rep(1,length(zz)), pch=19, col=cls )
?plot.symbol
?symbols
op <- palette(rainbow(N, end = 0.9))
symbols(Height, Volume, circles = Girth/16, inches = FALSE, bg = 1:N,
fg = "gray30", main = "symbols(*, circles = Girth/16, bg = 1:N)")
palette(op)
})
op <- palette(rainbow(N, end = 0.9))
symbols(Height, Volume, circles = Girth/16, inches = FALSE, bg = 1:N,
fg = "gray30", main = "symbols(*, circles = Girth/16, bg = 1:N)")
palette(op)
N <- 10
op <- palette(rainbow(N, end = 0.9))
symbols(Height, Volume, circles = Girth/16, inches = FALSE, bg = 1:N,
fg = "gray30", main = "symbols(*, circles = Girth/16, bg = 1:N)")
palette(op)
?symbols
symbols( zz, rep(1,length(zz), squares=1/100, col=cls))
symbols( zz, rep(1,length(zz), squares=1/100, col=cls))
zz <- seq( -3,3, length=length(cls))
plot( zz, rep(1,length(zz)), pch=19, col=cls )
ls()
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(rJava)
install.packages("rJava")
library(rJava)
install.packages("ggplot2")
library(ggplot2)
library("allez", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(allez)
?allez
?allezPlot
?allez
library(org.Hs.eg.db)
library(help=org.Hs.eg.db)
u <- as.list( org.Hs.egENSEBLE2EG )
u <- as.list( org.Hs.egENSEMBL2EG )
length(u)
head(u)
?allezTable
?allezPlot
nset <- 1000
a <- 1 - .05/nset
a
qnorm(a)
detach("package:allez", unload=TRUE)
library(devtools)
install_github("wiscstatman/allez")
library(allez)
?allezPlot
source("https://bioconductor.org/biocLite.R")
biocLite("hgu133plus2.db")
biocLite("reactome.db")
install_github("wiscstatman/allez")
library(allez)
?allez
library("hgu133plus2.db", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("reactome.db", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install_github("wiscstatman/allez")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install_github("wiscstatman/allez")
?allezPlot
library(allez)
?allez
allez
allezMat
version()
54^2
setwd("~/wip/scDDboost/scDDboost/fucci")
source("check.R")
library(devtools)
install("/Users/michaelnewton/wip/scDDboost/scDDboost/scDDboost_pkg")
library(SingleCellExperiment)
library(SummarizedExperiment)
library(scDDboost)
library(MAST)
library(scDD)
library(SingleCellExperiment)
library(data.table)
ls()
rm(list=ls())
rm(list=ls())
setwd("~/consult/vijay/edgardo")
load("data/ebseq-controls2.RData")
ls()
dim(dat)
dim(EBOut)
length(EBOut)
names(EBOut)
dim(means)
dim(pde)
pde[1:3,]
ls()
dim(means)
head(means)
library(EBSeq)
?EBSeq
library(help="EBSeq_NingLeng-package")
names(EBout)
ls()
names(EBOut)
dim(EBOut$PPpattern)
dim(EBOut$PPMat)
dim(EBOut$AllParti)
EBOut$AllParti
dir(data)
ls()
dir()
dir("data")
names(EBOut)
patts <- EBOut$AllParti
print(patts)
names(EBOut)
EBOUt$PPMat
EBOut$PPMat
names(EBOut)
dim(EBOut$PPpattern)
dim(EBOut$PPMatWith0)
source("ebpost.R")
source("ebpost.R")
source("ebpost.R")
hist( pde)
sum( pde )
mean( pde)
mean( !is.na(pde))
hist( tmp.ee)
which.max(tmp.ee)
ls()
dim(dat)
dat[12538,]
dim(means)
mean[12538,]
means[12538,]
which.max(pde)
means[4,]
sum( pde==1)
sum( is.na(pde))
p <- EBOut$PPpattern
sum(is.na(p))
dim(dat)
head(dat)
source("ebpost.R")
source("ebpost.R")
sum( pde2==1)
dim(means)
head(means)
source("ebpost.R")
source("ebpost.R")
sum(sel)
sum( pde2==1)
max( pde2[pde2 < 1])
u <- max( pde2[pde2<1])
format(u, digits=10)
u-1
1-u
source("ebpost.R")
dim(dat3)
head(dat3)
load("../dareen/results/ebseq.RData")
ls()
dim(results.MRA6)
dim(dat)
dim(sel)
length(sel)
source("ebpost.R")
sum(sel2)
sum(sel)
length(sel2)
length(sel)
source("ebpost.R")
rm(list=ls())
load("../dareen/results/ebseq.RData" ) ## this pulls treatment-control comparisons
## get a GO stem cell set
rr <- results.MRA5
aa <- rr$ok1 & rr$ok2
names(aa) <- rownames(rr)
bb <- 1*aa[!is.na(aa)]
nc <- 5
library(allez)
library(org.Hs.eg.db)
se <- as.list(org.Hs.egSYMBOL2EG)
gs <- names(bb)
ee <- se[gs]
ok.name <- sapply(ee, function(x) !is.null(x))
bb2 <- bb[ok.name]
ff <- ee[ok.name]   ## at least one Entrez ID
## pick one
eg1 <- sapply(ff, function(x) x[1] )
names(bb2) <- eg1
ag <- allez(bb2, lib="org.Hs.eg" )  ## for the sake of the genes in the GO, nothing else
u <- ag$aux$set.data
v1 <- (1:nrow(u))[u$go_id=="GO:0072089"]   ## stem cell proliferation
v2 <- (1:nrow(u))[u$go_id=="GO:0000165"]   ## MAPK cascade
## gene symbols in two  GO terms
w1 <- u[v1,3] # gene symbols
w2 <- u[v2,3] # gene symbols
length(w1)
head(w1)
head(w2)
length(u)
dim(u)
length(v1)
load("ebpost.RData") ##
head(sel)
sel[w1]
u <- sel[w1]
v <- names(u)
length(v)
v[u]
aa1 <- sel[w1]; aa2 <- sel[w2]
bb1 <- (names(aa1))[aa1] ; bb2 <- (names(aa2))[aa2]
aa1
bb1
bb2
length(w2)
length(w1)
length(bb1)
load("../dareen/results/ebseq.RData" ) ## this pulls treatment-control comparisons
## get a GO stem cell set
rr <- results.MRA5
dim(rr)
ls()
cells
cells <- as.factor( c( rep( "MRA5", 2), rep("MRA6",2), rep("MRA6BR",2), rep("MRA6MR",2) ) )
cells
u <- rr[1:100,]
dim(u)
v <- tapply(rr, mean,cells)
tapply(rr[1,], cells)
?tapply
tapply(rr[1,], cells, mean)
rr[1,]
is.numeric( rr[1,])
a <- as.matrix(rr)
tapply( a[1,], cells, mean)
load("../dareen/results/ebseq.RData" ) ## this pulls treatment-control comparisons
## get a GO stem cell set
rr <- results.MRA5
aa <- rr$ok1 & rr$ok2
names(aa) <- rownames(rr)
bb <- 1*aa[!is.na(aa)]
nc <- 5
library(allez)
library(org.Hs.eg.db)
se <- as.list(org.Hs.egSYMBOL2EG)
gs <- names(bb)
ee <- se[gs]
ok.name <- sapply(ee, function(x) !is.null(x))
bb2 <- bb[ok.name]
ff <- ee[ok.name]   ## at least one Entrez ID
## pick one
eg1 <- sapply(ff, function(x) x[1] )
names(bb2) <- eg1
ag <- allez(bb2, lib="org.Hs.eg" )  ## for the sake of the genes in the GO, nothing else
u <- ag$aux$set.data
v1 <- (1:nrow(u))[u$go_id=="GO:0072089"]   ## stem cell proliferation
v2 <- (1:nrow(u))[u$go_id=="GO:0000165"]   ## MAPK cascade
## gene symbols in two  GO terms
w1 <- u[v1,3] # gene symbols
w2 <- u[v2,3] # gene symbols
# some functions for plotting
library(heatmap3)
library(RColorBrewer)
attenuate.fun <- function(data,q1,q2){
data.attenuate <- data
data.attenuate[data.attenuate < quantile(data,q1,na.rm=T)] <- quantile(data,q1,na.rm=T)
data.attenuate[data.attenuate >quantile(data,q2,na.rm=T)] <- quantile(data,q2,na.rm=T )
data.attenuate
}
library(colorRamps)
load("ebpost.RData") ##
## DE or not between MRA 5 and MRA 6
aa1 <- sel[w1]; aa2 <- sel[w2]     ## 177/842 MAPK genes ; 24/105 Stem cell proliferation genes
bb1 <- (names(aa1))[aa1] ; bb2 <- (names(aa2))[aa2]
ok <- bb1 # GO:0072089  stem cell proliferation
nms0 <-  rownames( results.MRA5[ok,])
# non-treated profiles at stem-cell genes
dat <- as.matrix(
cbind( results.MRA5[ok,3:4], results.MRA6[ok,3:4], results.MRA6BR[ok,3:4], results.MRA6MR[ok,3:4] ) )
Y <- ( log2(dat+1) )
nms <- nms0
cells <- as.factor( c( rep( "MRA5", 2), rep("MRA6",2), rep("MRA6BR",2), rep("MRA6MR",2) ) )
aves <- matrix( NA, nrow(Y) , 4 )
rownames(aves) <- rownames(Y)
for( i in 1:nrow(Y) )
{
aves[i,] <- tapply( as.matrix(dat)[i,], cells, mean )
}
head(aves)
ssy <- apply(Y,1,var)
##sel <- (ssy >= quantile(ssy,0.50) ) ## drop the bottom 1/2 of low-varying genes
## don't filter this time
sel <- rep(TRUE, length(ssy))
Z <- Y - rowMeans(Y)
foo <- strsplit( colnames(Z), split="data.")
snms <- sapply(foo, function(x) x[2] )
colnames(Z) <- snms
Z <- Z[sel,]  ## filtering
sxb <- apply(dat,1,mean)
ssd <- apply(dat,1,sd)
scv <- sxb/ssd
oo <- order( -scv[sel] ) ## an order, for table below, by coefficient of variation
cls <- matlab.like(20)
scols <- (brewer.pal(7,"Dark2"))[4:7]
names(scols) <- levels(cells)
scols
x <- aves
dim(x)
colnames(x) <- levels(cells)
head(x)
source("ebpost.R")
source("ebpost.R")
sum(sel2)
source("ebpost.R")
sum(sel2)
source("ebpost.R")
sum(sel2)
rm(list=ls())
load("ebpost.RData")
ls()
dim(aves)
.5/58.5
458/46276
.5/94.5
1/876.5
.9/131.6
.5/56
setwd("~/wip/scDDboost/scDDboost/fucci")
rm(list=ls())
load("G1_G2.RData")
ls()
length(pDD7)
plot( pDD5, pDD6)
plot( pDD6,pDD7)
plot( pDD7, pDD8)
plot( pDD5, pDD8)
rm(list=ls())
load("results.RData")
ls()
head(rn)
length(rn)
length(cd)
head(cd)
summary(cd)
dim(data_count)
boxplot( log2( data_count[,1:20]+1) )
sum( pDD8 > .99)
sum( p_scDD > .99)
ls()
sum( P_scDD > .99)
sum( P_mast > .99 )
hist( P_scDD)
library(scDD)
?scDD
sum( P_scDD < .05)
sum( P_mast < .05)
length(P_scDD)
plot( P_scDD, PDD)
ls()
plot( P_scDD, pDD8 )
hist( P_scDD )
plot( P_scDD, P_mast )
plot( P_scDD, P_mast , pch="." )
cor( P_scDD, P_mast )
setwd("~/consult/albertini/biomarker")
setwd("~/wip/scDDboost/scDDboost/counts")
rm(list=ls())
ls()
source("look1.R")
ss
matplot( ss)
matplot( t(ss))
matplot(ss)
matplot( ss, log="y")
ss
matplot( log2(ss))
matplot( ss, log="y")
source("look1.R")
ss
source("look1.R")
source("look1.R")
tt
matplot( tt)
source("look1.R")
source("look1.R")
qq
oo
source("look1.R")
matlines(qq)
qq
?stripchart
stripchart(qq)
stripchart(t(qq))
stripchart(qq)
matlines(qq)
matplot(qq)
matplot(qq,type="l")
matplot(qq,type="b")
?matplot
matplot(qq,type="b",xlab=TRUE)
?matplot
?axis
source("look1.R")
source("look1.R")
source("look1.R")
qq
source("look1.R")
source("look1.R")
c(qq)
matplot(qq)
setwd("~/wip/scDDboost/scDDboost/fucci")
rm(list=ls())
load("results.RData")
ls()
p <- pDD8
hist(p)
mean(p)
sum( p > .99)
sum( p > .95)
op <- sort(p)
plot(op,type="l")
source("check2.R")
plot(oe,type="l")
abline( h=.05)
sum( oe < .05)
sum( oe < .01)
sum( oe < .02)
source("check2.R")
sum( ff < .05)
ls()
length(P_mast)
sum(P_mast < .05)
hist(P_mast)
sum(P_scDD <.05 )
sum(pDD8 < .05)
sum(pDD8 > .95)
sum(P_scDD < .01)
sum(P_mast < .01)
sum(ff < .01)
gg <- cumsum(oe)/(1:length(oe))
gg
max( abs(ff - gg))
plot(gg,type="l")
f <- function(pDD, FDR=0.01)
{
ee <- 1-pDD
oe <- sort(ee)
ff <- cumsum(oe)/(1:length(oe))
return( sum( ff <= FDR ) )
}
f(pDD8)
f(pDD7)
f(pDD7,FDR=.05)
setwd("~/wip/scDDboost/scDDboost/fucci")
source("results.R")
ls()
length(P_mast)
sum(P_mast < .05)
sum(P_scDD < .05)
listsize <- function(pDD, FDR=0.01)
{
ee <- 1-pDD
oe <- sort(ee)
ff <- cumsum(oe)/(1:length(oe))
return( sum( ff <= FDR ) )
}
listsize(pDD8)
listsize(pDD8,FDR=.05)
ls()
dim(data_count)
nms <- rownames(data_count)
head(nms)
listsize(pDD7, FDR=.05)
dnbinom
?dnbinom
setwd("~/Talks/jsm18")
source("nb.R")
matplot(supp, mden)
dim(mden)
matplot( supp, t(mden))
source("nb.R")
matplot( t(mden), type="l")
matplot( t(mden), type="l", log="y"
)
matplot( t(mden), type="l", log="y"
)
matplot( t(mden), type="l" )
source("nb.R")
source("nb.R")
source("nb.R")
source("nb.R")
source("nb.R")
source("nb.R")
source("nb.R")
source("nb.R")
source("nb.R")
source("nb.R")
setwd("~/wip/scDDboost/scDDboost/counts")
source("look1.R")
source("look1.R")
qq
source("look1.R")
qq
source("look1.R")
qq
